// Prisma schema for PostgreSQL
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  role          Role      @default(USER)
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts    Account[]
  sessions    Session[]
  favorites   Favorites[]
  investments Investment[]

  @@index([id])
  @@index([name])
  @@index([email])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Invite {
  id        String       @id @default(cuid())
  email     String
  name      String
  phone     String
  address   String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  favorites Favorites[]
  tags      InviteTags[]
}

model Tags {
  id         String       @id @default(cuid())
  name       String       @unique
  inviteTags InviteTags[]
}

model InviteTags {
  inviteeId String
  tagId     String

  invite Invite? @relation(fields: [inviteeId], references: [id])
  tag    Tags    @relation(fields: [tagId], references: [id])

  @@id([inviteeId, tagId])
}

model Favorites {
  userId    String
  inviteeId String

  user   User   @relation(fields: [userId], references: [id])
  invite Invite @relation(fields: [inviteeId], references: [id])

  @@id([userId, inviteeId])
}

model Investment {
  id        String  @id @default(cuid())
  name      String
  email     String
  amount    Int
  date      DateTime
  isInvited Boolean @default(true)

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@index([userId])
}
